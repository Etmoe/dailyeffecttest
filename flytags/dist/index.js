!function(t){var e={};function a(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=t,a.c=e,a.d=function(t,e,i){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)a.d(i,s,function(e){return t[e]}.bind(null,s));return i},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=0)}([function(t,e){const a=new dat.GUI,i=7,s=10,n=s+4,o=n*i,h=14*o,r=60,l={tagRowCount:{type:"float",value:i},tagHeight:{type:"float",value:s,range:[5,50]},tagMargin:{type:"float",value:4,range:[0,30]},tagRowGap:{type:"float",value:4,range:[0,100]},tagsTotalWidthHeightRatio:{type:"float",value:14,range:[0,20]},tagRowHeight:{type:"float",value:n},tagsTotalRowHeight:{type:"float",value:o},tagsHalfRowHeight:{type:"float",value:o/2},tagsHalfRowWidth:{type:"float",value:h/2},tagsTotalRowWidth:{type:"float",value:h},cameraZTotalRowHeightRatio:{type:"float",value:2.5,range:[1,10]},cameraZ:{type:"float",value:2.5*o},objPosNoiseWide:{type:"float",value:.63,range:[.1,5]},objPosNoiseOffset:{type:"float",value:.5,range:[0,2]},objPosNoiseUnit:{type:"float",value:1,range:[0,3]},noiseWide:{type:"float",value:1.8,range:[.1,5]},noiseOffset:{type:"float",value:1.6,range:[0,2]},noiseUnit:{type:"float",value:1,range:[0,3]},spinAngle:{type:"float",value:.43,range:[0,1]},spinOffset:{type:"float",value:40,range:[0,100]}};configListeners=[];for(let t in l){const e=l[t];e[t]=e.value,l[t].range&&a.add(l[t],t,e.range[0],e.range[1]).listen().onChange(e=>{l[t].value=e,l.tagRowHeight.value=l.tagHeight.value+l.tagRowGap.value,l.tagsTotalRowHeight.value=l.tagRowHeight.value*l.tagRowCount.value,l.tagsHalfRowHeight.value=l.tagsTotalRowHeight.value/2,l.tagsTotalRowWidth.value=l.tagsTotalRowHeight.value*l.tagsTotalWidthHeightRatio.value,l.tagsHalfRowWidth.value=l.tagsTotalRowWidth.value/2,l.cameraZ.value=l.tagsTotalRowHeight.value*l.cameraZTotalRowHeightRatio.value,configListeners.forEach(t=>t())})}const u={...l},g={};function d(t,e){if(g[t+"-"+e])return g[t+"-"+e];const a=["icon","text","texten"][t],i=document.querySelectorAll(`.${a}-img`)[e],s=(new THREE.TextureLoader).load(i.src);return s.img=i,g[t+"-"+e]=s,s}d(1,1);function p(t,e,a){return Math.max(Math.min(a,e),t)}class c{constructor(){configListeners.push(()=>this.onConfigUpdate())}onConfigUpdate(){}}class f extends c{constructor(t,e){super();this.scene=e,this.options=Object.assign({},{initialTagType:0,angle:0,v:0,offset:0},t),Object.assign(this,this.options),this.v=this.options.v*l.tagHeight.value/1e3,this.width=l.tagsTotalRowWidth.value,this.y=this.options.yIndex*n,this.startX=this.width/-2,this.startX=this.width/-2,this.endX=this.width/2,this.tags=[],this.tagType=this.options.initialTagType||6*Math.random()|0,this.tagTypeIndex=0,this.addTags(),this.onConfigUpdate=this.onConfigUpdate.bind(this)}addTags(){let t=this.tags[this.tags.length-1],e=t?t.x+t.width/2:this.startX+this.options.offset*l.tagRowHeight.value;for(;e<this.endX;){let t=this.tagType,a=this.tagTypeIndex;3===(a+=1)&&(a=0,t+=1,t%=6);const i=d(this.tagTypeIndex,this.tagType),s=l.tagHeight.value*i.img.width/i.img.height;if((e+=s/2)>this.endX)return;const n=new v({x:e,y:this.y,texture:i,width:s,height:l.tagHeight.value},this,this.scene);this.tags.push(n),e+=s/2+l.tagMargin.value,this.tagType=t,this.tagTypeIndex=a}}removeTag(t){const e=this.tags.indexOf(t);e>-1&&(t.destroy(),this.tags.splice(e,1))}update(){this.addTags();for(let t=this.tags.length-1;t>=0;t--){const e=this.tags[t],a=e.x-this.v;a<this.startX||a>this.endX?this.removeTag(e):e.updatePos(a,this.y)}}onConfigUpdate(){const t=this.width,e=l.tagsTotalRowWidth.value/t;if(this.v=this.options.v*l.tagHeight.value/1e3,this.width=l.tagsTotalRowWidth.value,this.y=this.options.yIndex*l.tagRowHeight.value,this.startX=this.width/-2,this.endX=this.width/2,this.tags.length>0){this.tags.forEach(t=>{t.updateOptions({width:l.tagHeight.value*t.texture.img.width/t.texture.img.height,height:l.tagHeight.value})});let t=[],a=this.tags[0].x*e-this.tags[0].width/2;this.tags.forEach(e=>{(a+=e.width/2)<this.startX||a>this.endX?t.push(e):e.updatePos(a,this.y),a+=e.width/2+l.tagMargin.value}),t.forEach(t=>this.removeTag(t))}}}class v{constructor(t,e,a){Object.assign(this,t),this.options=t,this.scene=a,this.path=e,this.plane=this.createPlane(),this.gemo=this.plane.geometry,this.initGemo=this.plane.geometry.clone(),this.scene.add(this.plane)}getTexture(t,e){const a=document.querySelectorAll(`.${t}-img`)[e],i=(new THREE.TextureLoader).load(a.src);return i.realWidth=s*a.width/a.height,i.realHeight=1*s,cache[t+i],i}createPlane(){const t=new THREE.PlaneGeometry(this.width,this.height,10,5),e=(new THREE.MeshBasicMaterial({color:16776960,side:THREE.DoubleSide,wireframe:!1,map:this.texture}),new THREE.ShaderMaterial({vertexShader:vertexShader,fragmentShader:fragmentShader,uniforms:{...u,texture1:{value:this.texture},objPos:{type:"vec3",value:new THREE.Vector3(this.x,this.options.y,0)},opacity:{type:"float",value:1},time:{type:"float",value:(new Date).getTime()/1e3}},depthTest:!1,transparent:!0,side:THREE.DoubleSide}));return new THREE.Mesh(t,e)}updateOptions(t){this.options=Object.assign(this.options,t),Object.assign(this,t),this.scene.remove(this.plane),this.plane=this.createPlane(),this.gemo=this.plane.geometry,this.scene.add(this.plane),this.initGemo=this.plane.geometry.clone()}updatePos(t,e){this.x=t,this.y=e;const a=new THREE.Vector3(this.x,this.options.y);let i=p(0,1,Math.abs(this.x/l.tagsHalfRowWidth.value/.8));i=p(0,1,i=easing.easeOutQuad(i));let s=p(0,1,Math.abs(this.x/l.tagsHalfRowWidth.value/.5));s=p(0,1,s=easing.easeOutCubic(s)-.1),this.plane.material.uniforms.objPos.value=a,this.plane.material.uniforms.opacity.value=s,this.plane.material.uniforms.time.value=(new Date).getTime();for(let t in this.plane.material.uniforms)l[t]&&(this.plane.material.uniforms[t].value=l[t].value);this.plane.position.x=t,this.plane.position.y=e,this.plane.scale.copy(new THREE.Vector3(i,i,i)),this.x<0&&(this.plane.rotation.x=Math.PI)}destroy(){this.scene.remove(this.plane),this.plane.geometry.dispose(),this.plane.material.dispose(),this.plane=null,this.gemo=null,this.initGemo=null}}class m extends c{constructor(){super();const t=Math.min(1*window.innerWidth,1600),e=9*t/16;this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(r,t/e,.1,1e3),this.camera.position.set(0,0,2*l.cameraZ.value),this.scene.add(this.camera),this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setPixelRatio(2),this.renderer.setSize(t,e),this.renderer.setViewport(0,0,t,e),document.querySelector("body").appendChild(this.renderer.domElement);const a=new THREE.GridHelper(500,10,16711680,14540253);a.rotation.x=Math.PI/2,this.scene.add(a),this.paths=this.createPaths(),this.onConfigUpdate=this.onConfigUpdate.bind(this)}createPaths(){const t=[];for(let e=-i/2;e<i/2+1;e++){const a=new f({yIndex:e,initialTagType:6*Math.random()|0,offset:10*(Math.random()-.5),v:80},this.scene);t.push(a)}return t}update(){this.paths.forEach(t=>{t.update()}),this.render()}render(){this.renderer.render(this.scene,this.camera)}onConfigUpdate(){this.camera.position.z=2*l.cameraZ.value,this.update(),setTimeout(()=>{this.render()},30),setTimeout(()=>{this.render()},60)}}class w{constructor(){this.renderer=new m}start(){this.tick=window.requestAnimationFrame(()=>this.update())}stop(){window.cancelAnimationFrame(this.tick)}update(){this.renderer.update(),this.tick=window.requestAnimationFrame(()=>this.update())}update(){setTimeout(()=>{this.renderer.update()},300)}}let y;window.onload=function(){(y=new w).start()},document.querySelector("a").addEventListener("click",function(){window.open(y.renderer.renderer.domElement.toDataURL("image/png"),"screenshot")})}]);
//# sourceMappingURL=index.js.map