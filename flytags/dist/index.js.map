{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","texts","textsEn","colors","icons","vertexShader","fragmentShader","Path","[object Object]","options","scene","this","assign","tagType","angle","v","width","endX","tags","createTags","tagTypeIndex","console","log","addTypeTags","parseInt","Math","random","type","x","iconTag","Tag","y","text","height","color","push","textTag","textEnTag","_initAngle","PI","cos","sin","getSpiralPos","length","tag","updatePos","path","img","createImg","realWidth","realHeight","plane","createPlane","gemo","geometry","initGemo","clone","optionHeight","cvs","document","createElement","ctx","getContext","padding","fontSize","abs","globalCompositeOperation","heightD2","font","measureText","widthD2","fillStyle","fillRect","arc","fill","textAlign","textBaseline","fillText","cvs2","ctx2","drawImage","body","appendChild","THREE","PlaneGeometry","shaderMaterial","MeshBasicMaterial","side","DoubleSide","wireframe","ShaderMaterial","uniforms","texture1","CanvasTexture","transparent","Mesh","position","add","remove","TagRender","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","set","renderer","WebGLRenderer","antialias","alpha","setSize","querySelector","domElement","gridHelper","GridHelper","rotation","paths","createPaths","start","forEach","update","render","tick","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nconst texts = [\n  '一块捐 一起爱',\n  '一起种希望',\n  '一起关注公益',\n  '一起节约用水',\n  '一起捐微笑',\n  '一起做好事',\n];\nconst textsEn = [\n  'Give together Love together',\n  'Planting hope together',\n  'Do good things',\n  'Focus on public welfare together',\n  'Conserve water together',\n  'Give a smile together',\n  'Do good things together',\n];\nconst colors = [\n  '#ffc648',\n  '#f9b8e0',\n  '#5277ef',\n  '#51e5e5',\n  '#afd16d',\n  '#ffb176',\n];\nconst icons = [\n  '\\uf43f',\n  '\\uf268',\n  '\\uf328',\n  '\\uf0f4',\n  '\\uf25e',\n  '\\uf798',\n];\n\nconst vertexShader = `\n\n  varying vec2 vUv;\n  void main() { \n    vUv = uv;\n    vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n    float scale = abs(worldPosition.x / 2000.0);\n    worldPosition = vec4(vec3(worldPosition) * scale, 1.0);\n\n    gl_Position = projectionMatrix * viewMatrix * worldPosition; \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n\n`;\n\nconst fragmentShader = `\n  uniform sampler2D texture1;\n  //纹理坐标\n  varying vec2 vUv;\n\n  void main(void){\n  //texture2D()获取纹素\n      gl_FragColor = texture2D(texture1, vUv);\n      // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n  }\n`;\n\nconst height = 5;\n\n\nfunction getSpiralPos(_initAngle, x, y) {\n  const initAngle = _initAngle + y / 5;\n  const angle = x * x / 1000000 + initAngle;\n\n  console.log(x, angle / Math.PI * 180);\n  return {\n    x: x * Math.cos(angle),\n    y: x * Math.sin(angle)\n  }\n}\n\n\nclass Path {\n  constructor(options, scene) {\n    const defaults = {\n      tagType: 0,\n      angle: 0,\n      v: 1\n    };\n    this.scene = scene;\n    this.options = Object.assign({}, defaults, options);\n    this.width = 20;\n    this.endX = -1 * this.width;\n    this.tags = [];\n    this.createTags();\n\n    this.tagType = options.tagType;\n    this.tagTypeIndex = 0;\n  }\n\n  createTags() {\n\n    while (this.endX < this.width) {\n      console.log(this.endX);\n      this.endX = this.addTypeTags(parseInt(Math.random() * 6), this.endX);\n    }\n  }\n\n  addTypeTags(type, x) {\n    let endX = x;\n    const iconTag = new Tag({\n      x: endX,\n      y: this.options.y,\n      type: 'icon',\n      text: icons[type],\n      height: this.options.height,\n      color: colors[type]\n    }, this, this.scene);\n    endX += iconTag.width + 2;\n    this.tags.push(iconTag);\n\n    const textTag = new Tag({\n      x: endX,\n      y: this.options.y,\n      type: 'text',\n      text: texts[type],\n      height: this.options.height,\n      color: colors[type]\n    }, this, this.scene);\n    endX += textTag.width + 2;\n    this.tags.push(textTag);\n\n    const textEnTag = new Tag({\n      x: endX,\n      y: this.options.y,\n      type: 'text',\n      text: textsEn[type],\n      height: this.options.height,\n      color: colors[type]\n    }, this, this.scene);\n\n    this.tags.push(textEnTag);\n    endX += textEnTag.width + 2;\n    return endX;\n  }\n\n  getPos(x, y) {\n    return getSpiralPos(this.options.angle, x, y);\n  }\n\n  // getV(x) {\n\n  // }\n\n  // getRotation(x) {\n\n  // }\n\n  update() {\n    for (let i = this.tags.length - 1; i > 0; i--) {\n      const tag = this.tags[i];\n\n      tag.updatePos(tag.x - this.options.v);\n      // if (tag.x < 0) {\n      //   tag.destroy();\n      //   this.tags.splice(i, 1);\n      // }\n    }\n  }\n}\n\nclass Tag {\n\n  constructor(options, path, scene) {\n\n    const { x } = options;\n    this.scene = scene;\n    this.x = x;\n    this.options = options;\n    this.path = path;\n    this.img = this.createImg(options);\n    this.width = this.img.realWidth / 10;\n    this.height = this.img.realHeight / 10;\n\n    this.plane = this.createPlane();\n    this.gemo = this.plane.geometry;\n    this.initGemo = this.plane.geometry.clone();\n    // this.updatePos(x);\n  }\n\n  createImg(options) {\n    const { type, text, height: optionHeight, color } = options;\n    const scale = 3;\n    const height = optionHeight * scale;\n    const cvs = document.createElement('canvas');\n    const ctx = cvs.getContext('2d');\n    const padding = type === 'text' ? [height / 2, height / 2] : [height / 4, 0];\n    const fontSize = Math.abs(height - padding[1]);\n    const globalCompositeOperation = type === 'text' ? 'source-atop' : 'destination-in';\n\n\n    let heightD2 = parseInt(height / 2);\n\n    cvs.width = 1000;\n    cvs.height = 100;\n    // ctx.font = fontSize | 0 + 'px ' + 'microsoft yahei';\n    ctx.font = fontSize + 'px PingFang SC';\n    let width = ctx.measureText(text).width;\n    width += padding[0] * 2;\n    let widthD2 = parseInt(width / 2);\n\n    cvs.realWidth = width;\n    cvs.realHeight = height;\n    // cvs.width = width;\n\n    ctx.fillStyle = color;\n\n    ctx.fillRect(heightD2, 0, width - height, height);\n    ctx.arc(heightD2, heightD2, heightD2, 0, Math.PI * 2);\n    ctx.arc(width - heightD2, heightD2, heightD2, 0, Math.PI * 2);\n    ctx.fill();\n\n    ctx.globalCompositeOperation = globalCompositeOperation;\n    ctx.fillStyle = '#fff';\n\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(text, widthD2, heightD2);\n\n    const cvs2 = document.createElement('canvas');\n    const ctx2 = cvs2.getContext('2d');\n\n    cvs2.width = 1024;\n    cvs2.height = 1024;\n    cvs2.realWidth = width / scale;\n    cvs2.realHeight = height / scale;\n    ctx2.drawImage(cvs, 0, 0, width, height, 0, 0, 1024, 1024);\n    document.body.appendChild(cvs2);\n    return cvs2;\n  }\n\n  createPlane() {\n    const geometry = new THREE.PlaneGeometry(this.width, this.height, 5, 5);\n    const material = new THREE.MeshBasicMaterial({ color: this.options.color, side: THREE.DoubleSide, wireframe: true });\n    const shaderMaterial = new THREE.ShaderMaterial({\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      uniforms: {\n        texture1: { value: new THREE.CanvasTexture(this.img) }\n      },\n      // depthTest: false,\n      transparent: false,\n      side:THREE.DoubleSide\n      // wireframe: true\n    });\n\n    const plane = new THREE.Mesh(geometry, shaderMaterial);\n    plane.position.y = this.options.y;\n    this.scene.add(plane);\n    return plane;\n  }\n\n  updatePos(x) {\n    this.x = x;\n\n    // this.gemo.vertices.forEach(vec => {\n    //   const pos = this.path.getPos(vec.x + x, vec.y);\n    //   vec.x = pos.x;\n    //   vec.y = pos.y;\n    // });\n\n    // const pos = this.path.getPos(x, 0);\n    // this.plane.position.copy(new THREE.Vector3(pos.x, pos.y));\n    this.plane.position.x = x + this.width / 2;\n\n    // this.gemo.verticesNeedUpdate = true;\n  }\n\n  destroy() {\n    this.scene.remove(this.plane);\n    this.gemo = null;\n    this.initGemo = null;\n  }\n}\n\nclass TagRender {\n  constructor() {\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.camera.position.set(0, 6, 200);\n    this.scene.add(this.camera);\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    // this.renderer.setClearColor(0x000000, 0);\n    this.renderer.setSize(window.innerWidth, window.innerWidth * 9 / 16);\n    document.querySelector('body').appendChild(this.renderer.domElement);//将渲染Element添加到Dom中\n\n\n    const gridHelper = new THREE.GridHelper(500, 10, 0xddddd, 0xeeeeee);\n    gridHelper.rotation.x = Math.PI / 2;\n    this.scene.add(gridHelper);\n\n    this.paths = this.createPaths();\n  }\n\n  createPaths() {\n    const paths = [];\n    const step = 15;\n    const start = Math.PI / 2;\n    const start2 = Math.PI / -2;\n\n    for (let i = -5; i < 10; i++) {\n      const path = new Path({\n        angle: start + step * i,\n        y: step * i,\n        height: 10,\n      }, this.scene);\n      // const path2 = new Path({\n      //   angle: start2 + step * i\n      // }, this.scene);\n      paths.push(path);\n      // paths.push(path2);\n    }\n    return paths;\n  }\n\n  update() {\n    this.paths.forEach(path => {\n      path.update();\n    });\n    this.render();\n  }\n\n  render() {\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nclass Ani {\n  constructor() {\n    this.renderer = new TagRender();\n  }\n\n  start() {\n    this.tick = window.requestAnimationFrame(() => this.update());\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.tick);\n  }\n\n  update() {\n    this.renderer.update();\n    // this.tick = window.requestAnimationFrame(() => this.update());\n  }\n}\n\nconst ani = new Ani();\n\nani.start();\n\n\n\n\n// for (let i = 0; i < 6; i++) {\n//   const y = i * height * 1.3 + 50;\n\n//   let x = 0;\n\n//   let iconTag = new Tag({\n//     type: 'icon',\n//     text: icons[i],\n//     height,\n//     color: colors[i]\n//   });\n//   ctx.drawImage(iconTag.img, x, y);\n//   x += iconTag.width + 20;\n\n\n//   let textTag = new Tag({\n//     type: 'text',\n//     text: texts[i],\n//     height,\n//     color: colors[i]\n//   });\n//   ctx.drawImage(textTag.img, x, y);\n//   x += textTag.width + 20;\n\n//   let textEnTag = new Tag({\n//     type: 'text',\n//     text: textsEn[i],\n//     height,\n//     color: colors[i]\n//   });\n\n//   ctx.drawImage(textEnTag.img, x, y);\n//   x += textsEn.width + 20;\n// }"],"sourceRoot":""}