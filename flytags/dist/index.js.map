{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gui","dat","GUI","tagRowCount","tagHeight","tagRowHeight","tagsTotalRowHeight","tagsTotalRowWidth","cameraFov","config","type","range","tagMargin","tagRowGap","tagsTotalWidthHeightRatio","tagsHalfRowHeight","tagsHalfRowWidth","cameraZTotalRowHeightRatio","cameraZ","objPosNoiseWide","objPosNoiseOffset","objPosNoiseUnit","noiseWide","noiseOffset","noiseUnit","spinAngle","spinOffset","configListeners","configItem","add","listen","onChange","forEach","listener","uniform","textureCache","getTexture","typeIndex","typeName","img","document","querySelectorAll","texture","THREE","TextureLoader","load","src","step","min","max","Math","Base","[object Object]","push","this","onConfigUpdate","Path","options","scene","super","assign","initialTagType","angle","v","offset","width","y","yIndex","startX","endX","tags","tagType","random","tagTypeIndex","addTags","lastTag","length","lastX","x","tagWidth","height","tag","Tag","index","indexOf","destroy","splice","newX","removeTag","updatePos","prevWidth","ratio","updateOptions","removeTags","path","plane","createPlane","gemo","geometry","initGemo","clone","num","realWidth","realHeight","cache","PlaneGeometry","shaderMaterial","MeshBasicMaterial","color","side","DoubleSide","wireframe","map","ShaderMaterial","vertexShader","fragmentShader","uniforms","texture1","objPos","Vector3","opacity","time","Date","getTime","depthTest","transparent","Mesh","remove","position","scale","abs","easing","easeOutQuad","easeOutCubic","material","uniformKey","copy","rotation","PI","dispose","TagRender","window","innerWidth","Scene","camera","PerspectiveCamera","set","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","setSize","setViewport","querySelector","appendChild","domElement","gridHelper","GridHelper","paths","createPaths","update","render","z","setTimeout","Ani","tick","requestAnimationFrame","cancelAnimationFrame","ani","onload","start","addEventListener","open","toDataURL"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const gui = new dat.GUI();\n\nconst texts = [\n  '一块捐 一起爱',\n  '一起种希望',\n  '一起关注公益',\n  '一起节约用水',\n  '一起捐微笑',\n  '一起做好事',\n];\nconst textsEn = [\n  'Give together Love together',\n  'Planting hope together',\n  'Do good things',\n  'Focus on public welfare together',\n  'Conserve water together',\n  'Give a smile together',\n  'Do good things together',\n];\nconst colors = [\n  '#ffc648',\n  '#f9b8e0',\n  '#5277ef',\n  '#51e5e5',\n  '#afd16d',\n  '#ffb176',\n];\nconst icons = [\n  '\\uf43f',\n  '\\uf268',\n  '\\uf328',\n  '\\uf0f4',\n  '\\uf25e',\n  '\\uf798',\n];\n\nconst tagRowCount = 7;\nconst tagMargin = 4;\nconst tagHeight = 10;\nconst tagRowGap = 4;\nconst tagsTotalWidthHeightRatio = 14;\nconst tagRowHeight = tagHeight + tagRowGap;\nconst tagsTotalRowHeight = tagRowHeight * tagRowCount;\nconst tagsHalfRowHeight = tagsTotalRowHeight / 2;\nconst tagsTotalRowWidth = tagsTotalRowHeight * tagsTotalWidthHeightRatio;\nconst tagsHalfRowWidth = tagsTotalRowWidth / 2;\nconst cameraFov = 60;\nconst cameraZTotalRowHeightRatio = 2.5;\nconst cameraZ = tagsTotalRowHeight * cameraZTotalRowHeightRatio;\n\nconst objPosNoiseWide = 0.63;\nconst objPosNoiseOffset = 0.5;\nconst objPosNoiseUnit = 1;\n\nconst noiseWide = 1.8;\nconst noiseOffset = 1.6;\nconst noiseUnit = 1;\n\nconst spinAngle = 0.43;\nconst spinOffset = 40;\n\nconst config = {\n  tagRowCount: {\n    type: 'float',\n    value: tagRowCount,\n    // range: [4, 12]\n  },\n  tagHeight: {\n    type: 'float',\n    value: tagHeight,\n    range: [5, 50]\n  },\n  tagMargin: {\n    type: 'float',\n    value: tagMargin,\n    range: [0, 30]\n  },\n  tagRowGap: {\n    type: 'float',\n    value: tagRowGap,\n    range: [0, 100]\n  },\n  tagsTotalWidthHeightRatio: {\n    type: 'float',\n    value: tagsTotalWidthHeightRatio,\n    range: [0, 20]\n  },\n  tagRowHeight: {\n    type: 'float',\n    value: tagRowHeight,\n  },\n  tagsTotalRowHeight: {\n    type: 'float',\n    value: tagsTotalRowHeight\n  },\n  tagsHalfRowHeight: {\n    type: 'float',\n    value: tagsHalfRowHeight,\n  },\n  tagsHalfRowWidth: {\n    type: 'float',\n    value: tagsHalfRowWidth\n  },\n  tagsTotalRowWidth: {\n    type: 'float',\n    value: tagsTotalRowWidth\n  },\n  cameraZTotalRowHeightRatio: {\n    type: 'float',\n    value: cameraZTotalRowHeightRatio,\n    range: [1, 10]\n  },\n  cameraZ: {\n    type: 'float',\n    value: cameraZ,\n  },\n\n  objPosNoiseWide: {\n    type: 'float',\n    value: objPosNoiseWide,\n    range: [0.1, 5]\n  },\n\n  objPosNoiseOffset: {\n    type: 'float',\n    value: objPosNoiseOffset,\n    range: [0, 2]\n  },\n  objPosNoiseUnit: {\n    type: 'float',\n    value: objPosNoiseUnit,\n    range: [0, 3]\n  },\n  noiseWide: {\n    type: 'float',\n    value: noiseWide,\n    range: [0.1, 5]\n  },\n  noiseOffset: {\n    type: 'float',\n    value: noiseOffset,\n    range: [0, 2]\n  },\n  noiseUnit: {\n    type: 'float',\n    value: noiseUnit,\n    range: [0, 3]\n  },\n  spinAngle: {\n    type: 'float',\n    value: spinAngle,\n    range: [0, 1]\n  },\n  spinOffset: {\n    type: 'float',\n    value: spinOffset,\n    range: [0, 100]\n  },\n};\nconfigListeners = [];\n\nfunction updateConfig() {\n  config.tagRowHeight.value = config.tagHeight.value + config.tagRowGap.value;\n  config.tagsTotalRowHeight.value = config.tagRowHeight.value * config.tagRowCount.value;\n  config.tagsHalfRowHeight.value = config.tagsTotalRowHeight.value / 2;\n  config.tagsTotalRowWidth.value = config.tagsTotalRowHeight.value * config.tagsTotalWidthHeightRatio.value;\n  config.tagsHalfRowWidth.value = config.tagsTotalRowWidth.value / 2;\n  config.cameraZ.value = config.tagsTotalRowHeight.value * config.cameraZTotalRowHeightRatio.value;\n  // console.log(config);\n  configListeners.forEach(listener => listener());\n}\n\nfor (let key in config) {\n  const configItem = config[key];\n  configItem[key] = configItem.value;\n  if (config[key].range) {\n    gui.add(config[key], key, configItem.range[0], configItem.range[1]).listen().onChange(value => {\n      config[key].value = value;\n      updateConfig();\n    });\n  }\n}\n\nconst uniform = {\n  ...config\n}\n\nconst textureCache = {};\nfunction getTexture(typeIndex, type) {\n  if (textureCache[typeIndex + '-' + type]) {\n    return textureCache[typeIndex + '-' + type];\n  }\n  const types = ['icon', 'text', 'texten'];\n  const typeName = types[typeIndex];\n  const imgs = document.querySelectorAll(`.${typeName}-img`);\n  const img = imgs[type];\n\n  const texture = new THREE.TextureLoader().load(img.src);\n  texture.img = img;\n\n  textureCache[typeIndex + '-' + type] = texture;\n  return texture;\n}\nconst testTexture = getTexture(1, 1);\n\nfunction step(min, max, value) {\n  return Math.max(Math.min(value, max), min);\n}\n\nclass Base {\n  constructor() {\n    configListeners.push(() => this.onConfigUpdate());\n  }\n  onConfigUpdate() {\n\n  }\n}\n\nclass Path extends Base {\n  constructor(options, scene) {\n    super();\n    const defaults = {\n      initialTagType: 0,\n      angle: 0,\n      v: 0,\n      offset: 0\n    };\n    this.scene = scene;\n    this.options = Object.assign({}, defaults, options);\n    Object.assign(this, this.options);\n    this.v = this.options.v * config.tagHeight.value / 1000;\n    this.width = config.tagsTotalRowWidth.value;\n    this.y = this.options.yIndex * tagRowHeight;\n    this.startX = this.width / -2;\n    this.startX = this.width / -2;\n    this.endX = this.width / 2;\n    this.tags = [];\n\n    this.tagType = this.options.initialTagType || (Math.random() * 6) | 0;\n    this.tagTypeIndex = 0;\n    this.addTags();\n\n    this.onConfigUpdate = this.onConfigUpdate.bind(this);\n  }\n\n  addTags() {\n    let lastTag = this.tags[this.tags.length - 1];\n    let lastX = lastTag ? lastTag.x + lastTag.width / 2 : this.startX + this.options.offset * config.tagRowHeight.value;\n    \n    while (lastX < this.endX) {\n      let tagType = this.tagType;\n      let tagTypeIndex = this.tagTypeIndex;\n\n      tagTypeIndex += 1;\n      if (tagTypeIndex === 3) {\n        tagTypeIndex = 0;\n        tagType += 1;\n        tagType = tagType % 6;\n      }\n      \n      const texture = getTexture(this.tagTypeIndex, this.tagType);\n      const tagWidth = config.tagHeight.value * texture.img.width / texture.img.height;\n      // console.log(texture.img.src);\n      lastX += tagWidth / 2;\n      if (lastX > this.endX) {\n        return;\n      }\n      const tag = new Tag({ \n        x: lastX, \n        y: this.y,\n        texture,\n        width: tagWidth,\n        height: config.tagHeight.value\n      }, this, this.scene);\n      this.tags.push(tag);\n\n      lastX += tagWidth / 2 + config.tagMargin.value;\n      this.tagType = tagType;\n      this.tagTypeIndex = tagTypeIndex;\n    }\n  }\n\n  removeTag(tag) {\n    const index = this.tags.indexOf(tag);\n    if (index > -1) {\n      tag.destroy();\n      this.tags.splice(index, 1);\n    }\n  }\n\n  update() {\n    this.addTags();\n    for (let i = this.tags.length - 1; i >= 0; i--) {\n      const tag = this.tags[i];\n      const newX = tag.x - this.v;\n      // const newX = tag.x;\n\n      if (newX < this.startX || newX > this.endX) {\n        this.removeTag(tag);\n      } else {\n        tag.updatePos(newX, this.y);\n      }\n    }\n  }\n\n  onConfigUpdate() {\n    const prevWidth = this.width;\n    const currWidth = config.tagsTotalRowWidth.value;\n    const ratio = currWidth / prevWidth;\n\n    this.v = this.options.v * config.tagHeight.value / 1000;\n    this.width = config.tagsTotalRowWidth.value;\n    this.y = this.options.yIndex * config.tagRowHeight.value;\n    this.startX = this.width / -2;\n    this.endX = this.width / 2;\n    \n    if (this.tags.length > 0) {\n      this.tags.forEach(tag => {\n        tag.updateOptions({\n          width: config.tagHeight.value * tag.texture.img.width / tag.texture.img.height,\n          height: config.tagHeight.value\n        });\n      });\n\n      let removeTags = [];\n      let lastX = this.tags[0].x * ratio - this.tags[0].width / 2;\n      \n      this.tags.forEach(tag => {\n        lastX += tag.width / 2;\n        if (lastX < this.startX || lastX > this.endX) {\n          removeTags.push(tag);\n        } else {\n          tag.updatePos(lastX, this.y);\n        }\n        lastX += tag.width / 2 + config.tagMargin.value;\n      });\n      removeTags.forEach(tag => this.removeTag(tag));\n    }\n  }\n\n}\n\nclass Tag {\n\n  constructor(options, path, scene) {\n\n    Object.assign(this, options);\n    this.options = options;\n    this.scene = scene;\n    this.path = path;\n    this.plane = this.createPlane();\n    this.gemo = this.plane.geometry;\n    this.initGemo = this.plane.geometry.clone();\n\n    // this.updatePos(this.x, this.y);\n    this.scene.add(this.plane);\n  }\n\n  getTexture(type, num) {\n\n    const imgs = document.querySelectorAll(`.${type}-img`);\n    const img = imgs[num];\n\n    const texture = new THREE.TextureLoader().load(img.src);\n    texture.realWidth = tagHeight * img.width / img.height;\n    texture.realHeight = tagHeight * 1.0;\n    cache[type + texture];\n    return texture;\n  }\n\n  createPlane() {\n    const geometry = new THREE.PlaneGeometry(this.width, this.height, 10, 5);\n    const material = new THREE.MeshBasicMaterial({ color: 0xffff00, side: THREE.DoubleSide, wireframe: false, map: this.texture });\n\n    // console.log(this.texture.img.src);\n    const shaderMaterial = new THREE.ShaderMaterial({\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      uniforms: {\n        ...uniform,\n        texture1: { value: this.texture },\n        // texture1: { value: testTexture },\n        objPos: {\n          type: 'vec3',\n          value: new THREE.Vector3(this.x, this.options.y, 0)\n        },\n        opacity: {\n          type: 'float',\n          value: 1\n        },\n        time: {\n          type: 'float',\n          value: new Date().getTime() / 1000\n        },\n      },\n      depthTest: false,\n      transparent: true,\n      side: THREE.DoubleSide,\n      // wireframe: true\n    });\n\n    const plane = new THREE.Mesh(geometry, shaderMaterial);\n    // const plane = new THREE.Mesh(geometry, material);\n    return plane;\n  }\n\n  updateOptions(options) {\n    this.options = Object.assign(this.options, options);\n    Object.assign(this, options);\n    this.scene.remove(this.plane);\n    this.plane = this.createPlane();\n    this.gemo = this.plane.geometry;\n    this.scene.add(this.plane);\n    this.initGemo = this.plane.geometry.clone();\n  }\n\n  updatePos(x, y) {\n    this.x = x;\n    this.y = y;\n    // console.log(x, y);\n    const position = new THREE.Vector3(this.x, this.options.y);\n    let scale = step(0, 1, Math.abs(this.x / config.tagsHalfRowWidth.value / 0.8));\n    scale = easing.easeOutQuad(scale);\n    scale = step(0, 1, scale);\n\n    let opacity = step(0, 1, Math.abs(this.x / config.tagsHalfRowWidth.value / 0.5));\n    opacity = easing.easeOutCubic(opacity) - 0.1;\n    opacity = step(0, 1, opacity);\n\n\n    this.plane.material.uniforms.objPos.value = position;\n    this.plane.material.uniforms.opacity.value = opacity;\n    this.plane.material.uniforms.time.value = new Date().getTime();\n    for(let uniformKey in this.plane.material.uniforms) {\n      if (config[uniformKey]) {\n        this.plane.material.uniforms[uniformKey].value = config[uniformKey].value;\n      }\n    }\n\n    this.plane.position.x = x;\n    this.plane.position.y = y;\n\n    this.plane.scale.copy(new THREE.Vector3(scale, scale, scale));\n    if (this.x < 0) {\n      this.plane.rotation.x = Math.PI;\n    }\n\n\n    \n    // this.gemo.vertices.forEach(vec => {\n    //   const pos = this.path.getPos(vec.x + x, vec.y);\n    //   vec.x = pos.x;\n    //   vec.y = pos.y;\n    // });\n\n    // const pos = this.path.getPos(x, 0);\n    // this.plane.position.copy(new THREE.Vector3(pos.x, pos.y));\n\n    // this.gemo.verticesNeedUpdate = true;\n  }\n\n  destroy() {\n    this.scene.remove(this.plane);\n    this.plane.geometry.dispose();\n    this.plane.material.dispose();\n    // this.plane.dispose();\n    this.plane = null;\n    this.gemo = null;\n    this.initGemo = null;\n  }\n}\n\nclass TagRender extends Base {\n  constructor() {\n    super();\n\n    const width = Math.min(window.innerWidth * 1, 1600);\n    // const width = window.innerWidth;\n    const height = width * 9 / 16;\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(cameraFov, width / height, 0.1, 1000);\n    this.camera.position.set(0, 0, config.cameraZ.value * 2);\n    this.scene.add(this.camera);\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    // this.renderer.setClearColor(0x000000, 0);\n    this.renderer.setPixelRatio(2);\n    this.renderer.setSize(width, height);\n    // this.renderer.setPixelRatio(4);\n    // this.renderer.setSize(width, height, false);\n    this.renderer.setViewport(0, 0, width, height);\n    document.querySelector('body').appendChild(this.renderer.domElement);\n\n    const gridHelper = new THREE.GridHelper(500, 10, 0xff0000, 0xdddddd);\n    gridHelper.rotation.x = Math.PI / 2;\n    this.scene.add(gridHelper);\n\n    this.paths = this.createPaths();\n    this.onConfigUpdate = this.onConfigUpdate.bind(this);\n  }\n\n  createPaths() {\n    const paths = [];\n\n    for (let i = -tagRowCount / 2; i < tagRowCount / 2 + 1; i++) {\n      const path = new Path({\n        yIndex: i,\n        initialTagType: (Math.random() * 6) | 0,\n        offset: (Math.random() - 0.5) * 10,\n        v: 80\n      }, this.scene);\n      paths.push(path);\n    }\n    return paths;\n  }\n\n  update() {\n    this.paths.forEach(path => {\n      path.update();\n    });\n    this.render();\n  }\n\n  render() {\n    this.renderer.render(this.scene, this.camera);\n  }\n    \n  onConfigUpdate() {\n    this.camera.position.z = config.cameraZ.value * 2;\n    this.update();\n    setTimeout(() => {\n      this.render();\n    }, 30);\n    setTimeout(() => {\n      this.render();\n    }, 60);\n  }\n}\n\nclass Ani {\n  constructor() {\n    this.renderer = new TagRender();\n  }\n\n  start() {\n    this.tick = window.requestAnimationFrame(() => this.update());\n  }\n\n  stop() {\n    window.cancelAnimationFrame(this.tick);\n  }\n\n  update() {\n    this.renderer.update();\n    // setTimeout(() => {\n    //   this.update();\n    // }, 100);\n    this.tick = window.requestAnimationFrame(() => this.update());\n  }\n  update() {\n    setTimeout(() => {\n      this.renderer.update();\n    }, 300);\n  }\n}\n\nlet ani;\nwindow.onload = function () {\n  ani = new Ani();\n\n  ani.start();\n}\n\n// download img\nfunction download() {\n  // document.getElementById(\"downloader\").download = \"image.png\";\n  // document.getElementById(\"downloader\").href = document.querySelector(\"canvas\").toDataURL(\"image/png\");\n  window.open(ani.renderer.renderer.domElement.toDataURL('image/png'), 'screenshot');\n}\n\ndocument.querySelector('a').addEventListener('click', download);"],"sourceRoot":""}